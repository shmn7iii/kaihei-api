---
import { Icon } from "astro-icon";
import { type ApiResults } from "../lib/getServerStatus.ts";

export interface Props {
  serverStatus: ApiResults;
}

const { serverStatus } = Astro.props;
const mcServerHost = import.meta.env.PUBLIC_MC_SERVER_HOST;
---

<div class="w-full items-center">
  <div
    class="mb-8 rounded-lg border border-red-300 bg-red-50 p-4 text-lg text-red-800 dark:border-red-800 dark:bg-gray-800 dark:text-red-400"
    role="alert"
  >
    <span class="font-bold">Server Offline!</span>
  </div>
  <div class="relative overflow-x-auto">
    <table class="w-full text-left text-gray-500 rtl:text-right dark:text-gray-400">
      <tbody>
        <tr class="border-b border-t bg-white dark:border-gray-700 dark:bg-gray-800">
          <th scope="row" class="whitespace-nowrap px-6 py-4 font-medium text-gray-900 dark:text-white"> Address</th>
          <td class="px-6 py-4 text-right">
            <div style="display: flex; align-items: center; justify-content: flex-end;">
              <button class="copy" id="copy-address" type="button">
                <Icon name="lucide:copy" />
              </button>
              <p>{mcServerHost}</p>
            </div>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>

<style>
  .copy {
    width: 20px;
    height: 20px;
    margin-right: 0.4rem;
    cursor: pointer;
  }
</style>

<script define:vars={{ serverStatus }}>
  function writeClipboard(content) {
    navigator.clipboard.writeText(content);
  }

  document
    .getElementById("copy-ip")
    .addEventListener("click", writeClipboard(serverStatus.ip + ":" + serverStatus.port));
</script>
